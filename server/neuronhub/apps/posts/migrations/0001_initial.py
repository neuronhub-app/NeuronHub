# Generated by Django 5.2 on 2025-04-16 01:41

import django.db.models.deletion
import django_choices_field.fields
import django_extensions.db.fields
import neuronhub.apps.anonymizer.fields
import neuronhub.apps.db.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("tools", "0039_alter_historicaltoolreview_visibility_and_more"),
        ("users", "0006_user_id_uuid_alter_user_owner"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPost",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "visibility",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("private", "Private"),
                            ("users_selected", "Users Selected"),
                            ("connection_groups_selected", "Connection Groups Selected"),
                            ("connections", "Connections"),
                            ("subscribers_paid", "Subscribers Paid"),
                            ("subscribers", "Subscribers"),
                            ("internal", "Internal"),
                            ("public", "Public"),
                        ],
                        choices_enum=neuronhub.apps.anonymizer.fields.Visibility,
                        default="private",
                        max_length=26,
                    ),
                ),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True, editable=False, populate_from="title"
                    ),
                ),
                ("title", models.CharField(max_length=140)),
                ("content", neuronhub.apps.db.fields.MarkdownField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="tools.tool",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical post",
                "verbose_name_plural": "historical posts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "visibility",
                    django_choices_field.fields.TextChoicesField(
                        choices=[
                            ("private", "Private"),
                            ("users_selected", "Users Selected"),
                            ("connection_groups_selected", "Connection Groups Selected"),
                            ("connections", "Connections"),
                            ("subscribers_paid", "Subscribers Paid"),
                            ("subscribers", "Subscribers"),
                            ("internal", "Internal"),
                            ("public", "Public"),
                        ],
                        choices_enum=neuronhub.apps.anonymizer.fields.Visibility,
                        default="private",
                        max_length=26,
                    ),
                ),
                (
                    "slug",
                    django_extensions.db.fields.AutoSlugField(
                        blank=True, editable=False, populate_from="title", unique=True
                    ),
                ),
                ("title", models.CharField(max_length=140)),
                ("content", neuronhub.apps.db.fields.MarkdownField(blank=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(blank=True, related_name="posts", to="tools.tooltag"),
                ),
                (
                    "tool",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="tools.tool",
                    ),
                ),
                (
                    "users_library",
                    models.ManyToManyField(
                        blank=True, related_name="posts_library", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "users_read_later",
                    models.ManyToManyField(
                        blank=True, related_name="posts_read_later", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "visible_to_groups",
                    models.ManyToManyField(
                        blank=True, related_name="posts_visible", to="users.userconnectiongroup"
                    ),
                ),
                (
                    "visible_to_users",
                    models.ManyToManyField(
                        blank=True, related_name="posts_visible", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PostTagVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("comment", neuronhub.apps.db.fields.MarkdownField(blank=True)),
                ("is_vote_positive", models.BooleanField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="post_tag_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tag_votes",
                        to="posts.post",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_votes",
                        to="tools.tooltag",
                    ),
                ),
            ],
            options={
                "unique_together": {("post", "tag", "author")},
            },
        ),
        migrations.CreateModel(
            name="PostVote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_vote_positive", models.BooleanField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="post_votes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="votes",
                        to="posts.post",
                    ),
                ),
            ],
            options={
                "unique_together": {("post", "author")},
            },
        ),
    ]
