[tools]
    bun = "latest"
    uv = "latest"
    biome = "latest"
    claude = "latest"
        node = "latest"

[settings]
    python.uv_venv_auto = true # use uv /server/.venv/ instead of Mise

[task_config]
    includes = [
        "devops/install-deps.mise.toml",
        "devops/upgrade-deps.mise.toml",
        "devops/claude.mise.toml",
        "devops/coder/docker.mise.toml",
        "client/e2e/e2e.mise.toml",
    ]


[tasks."dev"]
    depends = ["dev:db", "dev:server", "dev:client"]

    [tasks."dev:server"]
        depends = "dev:db"
        dir = "server"
        run = "uv run manage.py runserver {% if not env['E2E_TEST']  %}$SERVER_PORT{% endif %}"

    [tasks."dev:client"]
        depends = "dev:db"
        dir = "client"
        run = "bun run dev --host"

    [tasks."dev:db"]
        dir = "devops"
        run = "sudo docker compose up db --detach"
        silent = true

    [tasks."dev:db-stop"]
        dir = "devops"
        run = "sudo docker compose down db"


[tasks."test"]
    dir = "server"
    depends = "dev:db"
    run = "mise run test:*"

    [tasks."test:pytest"]
        dir = "server"
        depends = "dev:db"
        run = "uv run pytest"

    [tasks."test:e2e"]
        depends = ["dev:db", "dev:db:setup-e2e"]
        dir = "client"
        run = "bun run playwright test --config=e2e/playwright.config.ts"
        env.VITE_SERVER_URL = "http://localhost:{{ get_env(name='E2E_SERVER_PORT', default='8001') }}"


[tasks."django:migrate"]
    dir = "server"
    run = "uv run manage.py migrate"

[tasks."django:makemigrations"]
    dir = "server"
    run = "uv run manage.py makemigrations"

[tasks."django:db-stubs-repopulate"]
    dir = "server"
    run = "uv run manage.py db_stubs_repopulate"


[tasks."typegen"]
    depends = "typegen:server"
    run = [
        "mise typegen:client:graphql",
        "mise typegen:client:react",
        "mise run --output=silent typegen:client:chakra", # stdout trash - nothing else works
    ]
    description = "Strawberry GraphQL + TypeSript"

    [tasks."typegen:server"]
        dir = "server"
        run = "uv run manage.py export_schema neuronhub.graphql --path=../schema.graphql"

    [tasks."typegen:client:graphql"]
        dir = "client"
        run = [
            "bun run graphql-codegen --errors-only --silent --config src/codegen.ts",
            "bun run gql-tada generate output",
        ]
        depends_post = "format:client"

    [tasks."typegen:client:react"]
        dir = "client"
        run = "bun run react-router typegen"

    [tasks."typegen:client:chakra"]
        dir = "client"
        run = "bunx @chakra-ui/cli typegen src/theme/theme.ts"


[tasks."format"]
    run = "mise run format:*"

    [tasks."format:server"]
        dir = "server"
        run = "uv run ruff format"

    [tasks."format:client"]
        dir = "client"
        run = [
            "bun run biome format --write",
            "bun run biome lint --write --unsafe",
        ]


[tasks."lint"]
    depends = "typegen"
    run = "mise run lint:*"

    [tasks."lint:server"]
        dir = "server"
        run = "uv run mypy neuronhub"

    [tasks."lint:client"]
        dir = "client"
        run = "bun run tsc --noEmit"
