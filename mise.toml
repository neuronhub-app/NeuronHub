[tools]
    bun = "latest"
    uv = "latest"

[settings]
    python.uv_venv_auto = true # use `uv` venv instead of Mise


[tasks.install]
    depends = ["install-server", "install-client"]

    [tasks.install-server]
        dir = "server"
        run = "uv sync"

    [tasks.install-client]
        dir = "client"
        run = "bun install"


# todo maybe: rename to run-dev
[tasks.run]
    depends = ["run-db", "run-server", "run-client"]

    [tasks.run-server]
        depends = "run-db"
        dir = "server"
        run = "uv run manage.py runserver"

    [tasks.run-client]
        dir = "client"
        run = "bun run dev"

    [tasks.run-db]
        description = "start docker db, idempotently"
        run = "sudo docker compose --file ./devops/docker-compose.dev-db.yml up --detach"

# manage.py commands

[tasks.migrate]
    depends = "run-db"
    dir = "server"
    run = "uv run manage.py migrate"

[tasks.makemigrations]
    depends = "run-db"
    dir = "server"
    run = "uv run manage.py makemigrations"

[tasks.test]
    depends = "run-db"
    dir = "server"
    run = "uv run pytest"

[tasks.db_stubs_repopulate]
    depends = "run-db"
    dir = "server"
    run = "uv run manage.py db_stubs_repopulate"


# GraphQL
# ------------------------------------------------

[tasks.graphql-gen]
    depends = ["graphql-gen-server", "graphql-gen-client"]

    [tasks.graphql-gen-server]
        dir = "server"
        run = "uv run manage.py export_schema neuronhub.graphql --path=../schema.graphql"

    [tasks.graphql-gen-client]
        dir = "client"
        run = [
            "bun run graphql-codegen --config src/codegen.ts",
            "bun run gql-tada generate output",
            "bunx @chakra-ui/cli typegen src/theme/theme.ts",
            "mise run format-client"
        ]


# format, lint
# ------------------------------------------------

[tasks.format]
    depends = ["format-server", "format-client"]

    [tasks.format-server]
        dir = "server"
        run = "uv run ruff format ."

    [tasks.format-client]
        dir = "client"
        run = "bun run biome check --write"

[tasks.lint]
    depends = ["lint-server", "lint-client"]

    [tasks.lint-server]
        dir = "server"
        run = "uv run mypy neuronhub"

    [tasks.lint-client]
        dir = "client"
        run = "bun run tsc --noEmit"


# upgrade
# ------------------------------------------------

[tasks.upgrade]
    depends = ["upgrade-server", "upgrade-client"]

    [tasks.upgrade-server]
        dir = "server"
        run = "uv lock --upgrade"

    [tasks.upgrade-client]
        dir = "client"
        run = [
            "bun run ncu --upgrade --packageManager",
            "bun install"
        ]
