[tools]
    bun = "latest"
    uv = "latest"
    claude = "latest"
        node = "latest"

[settings]
    python.uv_venv_auto = true # use uv /server/.venv/ instead of Mise

[task_config]
    includes = [
        "devops/install-deps.mise.toml",
        "devops/upgrade-deps.mise.toml",
        "devops/claude.mise.toml",
        "devops/coder/docker.mise.toml",
        "client/e2e/e2e.mise.toml",
    ]


[tasks.dev-start]
    depends = ["dev-db", "dev-server", "dev-client"]

    [tasks.dev-server]
        depends = "dev-db"
        dir = "server"
        run = "uv run manage.py runserver"

    [tasks.dev-client]
        depends = "dev-db"
        dir = "client"
        run = "bun run dev --host"

    [tasks.dev-db]
        dir = "devops"
        run = "sudo docker compose up db --detach"
        silent = true

    [tasks.dev-db-stop]
        dir = "devops"
        run = "sudo docker compose down db"


[tasks.pytest]
    dir = "server"
    depends = "dev-db"
    run = "uv run pytest"

[tasks.e2e]
    depends = ["dev-db", "dev-db-setup-e2e"]
    dir = "client"
    run = "bun run playwright test --config=e2e/playwright.config.ts"
    env.VITE_SERVER_URL = "http://localhost:{{get_env(name='E2E_SERVER_PORT', default='8001')}}"

[tasks.db-migrate]
    dir = "server"
    run = "uv run manage.py migrate"

[tasks.db-makemigrations]
    dir = "server"
    run = "uv run manage.py makemigrations"

[tasks.db-stubs-repopulate]
    dir = "server"
    run = "uv run manage.py db_stubs_repopulate"


[tasks.graphql-gen]
    depends = ["graphql-gen-server", "graphql-gen-client"]

    [tasks.graphql-gen-server]
        dir = "server"
        run = "uv run manage.py export_schema neuronhub.graphql --path=../schema.graphql"

    [tasks.graphql-gen-client]
        dir = "client"
        run = [
            "bun run graphql-codegen --config src/codegen.ts",
            "bun run gql-tada generate output",
            "mise format-client",
        ]

[tasks.client-typegen]
    dir = "client"
    run = [
        "bun run react-router typegen",
        "bunx @chakra-ui/cli typegen src/theme/theme.ts",
    ]


[tasks.format]
    depends = ["format-server", "format-client"]

    [tasks.format-server]
        dir = "server"
        run = "uv run ruff format ."

    [tasks.format-client]
        dir = "client"
        run = "bun run biome check --write"

    [tasks.format-client-unsafe]
        dir = "client"
        run = "bun run biome check --write --unsafe"


[tasks.lint]
    depends = "typegen-client"
    run = ["mise lint-server", "mise lint-client"]

    [tasks.lint-server]
        dir = "server"
        run = "uv run mypy neuronhub"

    [tasks.lint-client]
        dir = "client"
        run = "bun run tsc --noEmit"

    [tasks.typegen-client]
        dir = "client"
        run = [
            "bun run react-router typegen",
            "bunx @chakra-ui/cli typegen src/theme/theme.ts",
        ]
